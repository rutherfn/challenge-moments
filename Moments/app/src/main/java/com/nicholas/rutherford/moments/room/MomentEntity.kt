package com.nicholas.rutherford.moments.room

import androidx.room.Entity
import androidx.room.PrimaryKey
import androidx.room.TypeConverters
import com.nicholas.rutherford.moments.data.CategoryTag
import com.nicholas.rutherford.moments.data.converter.CategoryTagConverter
import java.util.UUID

/**
 * Represents a Moment entity that will be stored in the Room database.
 *
 * This entity corresponds to a row in the `moments` table and holds data for a single moment, including its
 * title and category.
 *
 * @param id A unique identifier for this moment. Defaults to a randomly generated UUID.
 * @param title The title of the moment.
 * @param categoryTag The category tag that associates the moment with a specific category (e.g., Family, Music).
 *
 * @Entity annotation defines this class as a Room entity that will be stored in the `moments` table.
 * The `@PrimaryKey` annotation specifies that `id` will be the primary key for this entity, and if no ID is
 * provided, a new UUID will be generated.
 *
 * The `@TypeConverters` annotation specifies that the `CategoryTagConverter` should be used to convert
 * `CategoryTag` objects to and from database-compatible formats.
 */
@Entity(tableName = "moments")
@TypeConverters(CategoryTagConverter::class)
data class MomentEntity(
    /**
     * The primary key for the entity. A unique UUID is generated by default if not provided.
     * The primary key ensures each moment is uniquely identified in the database.
     */
    @PrimaryKey val id: String = UUID.randomUUID().toString(),

    /**
     * The title of the moment. This is a required field and cannot be empty.
     */
    val title: String,

    /**
     * The category of the moment. This is a reference to the [CategoryTag] enum and categorizes
     * the moment into predefined categories such as "Family", "Music", etc.
     */
    val categoryTag: CategoryTag
)
